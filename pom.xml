<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>io.kermoss</groupId>
	<artifactId>reactive-business-flow-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>reactive-business-flow-parent</name>
	<description></description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.SR4</spring-cloud.version>
		<hikari.version>3.1.0</hikari.version>
		<mariadb.version>1.5.7</mariadb.version>
		<powermock.version>1.7.1</powermock.version>
		<feign-jackson>8.18.0</feign-jackson>
		<wiremock>2.18.0</wiremock>
		<kafka.version>1.3.8.RELEASE</kafka.version>
		<postgres.version>9.4-1206-jdbc42</postgres.version>
	</properties>

	<modules>
		<module>reactive-business-flow</module>
		<module>saga-worker</module>
		<module>cmd-scheduler</module>
	</modules>

	<dependencyManagement>

		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgres.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>io.kermoss</groupId>
				<artifactId>reactive-business-flow</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikari.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client</artifactId>
				<version>${mariadb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.feign</groupId>
				<artifactId>feign-jackson</artifactId>
				<version>${feign-jackson}</version>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.github.tomakehurst</groupId>
				<artifactId>wiremock-standalone</artifactId>
				<version>${wiremock}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
  <build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	

</project>
